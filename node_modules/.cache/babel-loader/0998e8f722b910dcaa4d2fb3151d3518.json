{"ast":null,"code":"var _jsxFileName = \"/Users/ronakupadhyaya/Documents/Citation-Frontend/src/Calendar.js\";\nimport React from 'react';\nimport BigCalendar from 'react-big-calendar';\nimport moment from 'moment';\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\nconst localizer = BigCalendar.momentLocalizer(moment);\nexport default class Calendar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      speakerEvents: [],\n      authorEvents: []\n    };\n  }\n\n  componentWillMount() {\n    const authors = this.props.location.state.authors;\n    console.log(authors);\n    fetch(\"http://localhost:8080/Citation-Backend/getSchedule\", {\n      method: 'POST',\n      body: JSON.stringify({\n        authors: authors\n      })\n    }).then(response => response.text()).then(responseText => {\n      const json = JSON.parse(responseText);\n      const speakerEvents = json['Speaker'];\n      const authorEvents = json['Author'];\n      this.setState({\n        speakerEvents: speakerEvents,\n        authorEvents: authorEvents\n      });\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n\n  render() {\n    return React.createElement(BigCalendar, {\n      events: speakerEvents,\n      localizer: localizer,\n      style: {\n        height: '100vh',\n        width: '100vw'\n      },\n      step: 60,\n      showMultiDayTimes: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    });\n  }\n\n}","map":{"version":3,"sources":["/Users/ronakupadhyaya/Documents/Citation-Frontend/src/Calendar.js"],"names":["React","BigCalendar","moment","localizer","momentLocalizer","Calendar","Component","constructor","props","state","speakerEvents","authorEvents","componentWillMount","authors","location","console","log","fetch","method","body","JSON","stringify","then","response","text","responseText","json","parse","setState","catch","error","render","height","width"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,oBAAxB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAO,mDAAP;AAEA,MAAMC,SAAS,GAAGF,WAAW,CAACG,eAAZ,CAA4BF,MAA5B,CAAlB;AAGA,eAAe,MAAMG,QAAN,SAAuBL,KAAK,CAACM,SAA7B,CAAuC;AACpDC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,aAAa,EAAE,EADJ;AAEXC,MAAAA,YAAY,EAAE;AAFH,KAAb;AAID;;AAEDC,EAAAA,kBAAkB,GAAG;AAAA,UACXC,OADW,GACC,KAAKL,KAAL,CAAWM,QAAX,CAAoBL,KADrB,CACXI,OADW;AAEnBE,IAAAA,OAAO,CAACC,GAAR,CAAYH,OAAZ;AACAI,IAAAA,KAAK,CAAC,oDAAD,EAAuD;AAC5DC,MAAAA,MAAM,EAAE,MADoD;AAE5DC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBR,QAAAA,OAAO,EAAEA;AADU,OAAf;AAFsD,KAAvD,CAAL,CAMDS,IANC,CAMKC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EANlB,EAODF,IAPC,CAOKG,YAAD,IAAkB;AACtB,YAAMC,IAAI,GAAGN,IAAI,CAACO,KAAL,CAAWF,YAAX,CAAb;AACA,YAAMf,aAAa,GAAGgB,IAAI,CAAC,SAAD,CAA1B;AACA,YAAMf,YAAY,GAAGe,IAAI,CAAC,QAAD,CAAzB;AACA,WAAKE,QAAL,CAAc;AACZlB,QAAAA,aAAa,EAAEA,aADH;AAEZC,QAAAA,YAAY,EAAEA;AAFF,OAAd;AAID,KAfC,EAgBDkB,KAhBC,CAgBMC,KAAD,IAAW;AAChBf,MAAAA,OAAO,CAACC,GAAR,CAAYc,KAAZ;AACD,KAlBC;AAmBD;;AAEDC,EAAAA,MAAM,GAAG;AACP,WACE,oBAAC,WAAD;AACE,MAAA,MAAM,EAAErB,aADV;AAEE,MAAA,SAAS,EAAEP,SAFb;AAGE,MAAA,KAAK,EAAE;AAAC6B,QAAAA,MAAM,EAAE,OAAT;AAAkBC,QAAAA,KAAK,EAAE;AAAzB,OAHT;AAIE,MAAA,IAAI,EAAE,EAJR;AAKE,MAAA,iBAAiB,MALnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AASD;;AA3CmD","sourcesContent":["import React from 'react';\nimport BigCalendar from 'react-big-calendar'\nimport moment from 'moment'\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\n\nconst localizer = BigCalendar.momentLocalizer(moment);\n\n\nexport default class Calendar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      speakerEvents: [],\n      authorEvents: [],\n    }\n  }\n\n  componentWillMount() {\n    const { authors } = this.props.location.state;\n    console.log(authors);\n    fetch(\"http://localhost:8080/Citation-Backend/getSchedule\", {\n    method: 'POST',\n    body: JSON.stringify({\n      authors: authors,\n    })\n  })\n  .then((response) => response.text())\n  .then((responseText) => {\n    const json = JSON.parse(responseText);\n    const speakerEvents = json['Speaker'];\n    const authorEvents = json['Author'];\n    this.setState({\n      speakerEvents: speakerEvents,\n      authorEvents: authorEvents,\n    })\n  })\n  .catch((error) => {\n    console.log(error);\n  });\n  }\n\n  render() {\n    return (\n      <BigCalendar\n        events={speakerEvents}\n        localizer={localizer}\n        style={{height: '100vh', width: '100vw'}}\n        step={60}\n        showMultiDayTimes\n      />\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}